!!! 
%head
    %title ETH Video Portal Beautifier
    / jQuery    
    %script{:src => "https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"}
    / Semanti UI
    %link{:href => "https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css", :rel => "stylesheet"}/
    %script{:src => "https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js"}
    / templating
    %script{:src => "https://cdnjs.cloudflare.com/ajax/libs/mustache.js/3.0.1/mustache.js"}
    :css
        body {
            width: 100%;
            display: flex;
            justify-content: space-around;
        }

        #center-flex {
            flex-basis: 50%;
            padding: 10px;
            padding-top: 40px;
            display: flex;
            flex-direction: column;
        }

        #hidden {
            display: none;
        }

        #copy-textarea {
            display: none;
        }

        #visible-only-with-content {
            display: none;
        }
%body
    #center-flex
        .ui.active.centered.inline.loader#loader
        #visible-only-with-content
            .ui
                .h1.ui.left.floated.header.page-title
                %a.ui.compact.label.page-original-url
                    %i.external.alternate.icon
                    original
            .ui.segment#main-list-segment
                .ui.divided.relaxed.list#main-list
        .ui.segment
            .ui.fluid.action.input
                %input#add-lecture-input{:type => "text", :placeholder=>"ETH Video Portal URL"}
                .ui.compact.button{:onclick => "show_lecture($('#add-lecture-input').val())"}
                    Add Lecture
                .ui.circular.icon.button.tiny{:onclick => "dom_showAddLectureModal()"}
                    %i.info.icon
        %textarea#copy-textarea
        .ui.vertical.segment
            .ui.right.floated.sub.header
                Â© Silas Gyger, 2019
                %a.ui.label{:href=>"https://github.com/Nearoo"}
                    %i.github.icon
                    source
    #hidden
        #template-listitem
            .item
                .right.floated.content
                    .ui.icon.button{:onclick =>"copy('{{link}}')"}
                        %i.copy.icon
                    .ui.icon.button{:onclick =>"play('{{link}}')"}
                        %i.play.icon
                .content
                    .header
                        {{title}}
                    .description
                        {{date}}
        #new-lecture-modal.ui.basic.modal
            .header
                Add New Lecture
            .image.content
                %img.image{:src => "expl1.png"}
                .description
                    Copy the link of the desired lecture on the <a href="https://www.video.ethz.ch/lectures.html">ETH Vied Portal</a>
                    and paste it into the text field.
            .image.content
                %img.image{:src => "expl2.png"}
                .description
                    After pressing "Add Lecture", add the page to your favorites for easy access later.
            
:javascript
    $(document).ready(()=>{
        var ethUrl = $.urlParam('url');
        if(ethUrl){
            dom_createList(ethUrl);
        } else {
            $("#visible-only-with-content").hide();
            $("#loader").hide()
        }
    })

    function add_element(data){
        var templ = $("#template-listitem").html();
        var processed = Mustache.render(templ, data);
        $("#main-list").append($(processed));
    }

    function play(url){
        get_external(url, page => {
            var vid_url = get_videoUrl(page);
            window.open(vid_url, "_blank");
        });
        
    }

    function copy(url){
        get_external(url, page => {
            var vid_url = get_videoUrl(page);
            var textar = $("#copy-textarea");
            textar.show();
            textar.val(vid_url);

            document.getElementById("copy-textarea").select();
            document.execCommand("copy");
            textar.hide();
        });
    }

    function dom_createList(url){
        get_external(url, (page)=>{
            // For each list element..
            page.find("div.newsListBox").each((el, val)=>{
                var li = $(val);
                var path = li.find("a").attr("href")
                var base = get_location(url).hostname;
                add_element({
                    title: li.find("h2").text(),
                    link: `https://${base}/${path}`,
                    date: li.find("p").text()
                });
            });

            // Set title of page 
            var lec_title = page.find("h1").html()
            $(".page-title").html(`<i class="tv icon"></i> ${lec_title}`);
            $(".page-original-url").attr("href", url);
            $("title").html("ETH Video Portal Beautifyer: " + lec_title);

            $("#visible-only-with-content").show();
            $("#loader").hide()
        });
    }

    function dom_showAddLectureModal(){
        $("#new-lecture-modal").modal('show');
    }

    $("#new-lecture-modal").modal({
        onApprove: () => {
            var uri = "/?url=" + $("#url-input").val();
            window.location.href = encodeURI(uri);
        }
    });

    function get_videoUrl(page){
        // Returns video url hidden in eth video page "url"
        return page.find("li.video").first().find("a").first().attr("href");
    }

    // Returns an external page proxied through server, circumventing CORS
    function get_external(url, callback){
        $.get(encodeURI("https://cors.io/?" + url), {}, (data, foo, bar) => {
            console.l
            var virtualDocument = document.implementation.createHTMLDocument('virtual');
            callback($(data, virtualDocument));
        });
    }

    function get_location(url){
        // Returns objects with attrs pathname, hostname etc.
        // Shamelessly stolen from https://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript
        var l = document.createElement("a");
        l.href = url;
        return l;
    }

    $.urlParam = function(name){
        // Shamelessly stolen from https://stackoverflow.com/a/25359264/3424423
        var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
        if (results==null) {
            return null;
        }
        return decodeURI(results[1]) || 0;
    }

    function show_lecture(url){
        window.location.href = encodeURI("/?url=" + url);
    }